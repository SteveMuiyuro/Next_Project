{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///home/steve/Desktop/next_project/app/query/route.ts"],"sourcesContent":["import postgres from 'postgres';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n\nasync function listInvoices() {\n\tconst data = await sql`\n    SELECT invoices.amount, customers.name\n    FROM invoices\n    JOIN customers ON invoices.customer_id = customers.id\n    WHERE invoices.amount = 666;\n  `;\n\n\treturn data;\n}\n\nexport async function GET() {\n  return Response.json({\n    message:\n      'Uncomment this file and remove this line. You can delete this file when you are finished.',\n  });\n  // try {\n  // \treturn Response.json(await listInvoices());\n  // } catch (error) {\n  // \treturn Response.json({ error }, { status: 500 });\n  // }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,CAAA,GAAA,+LAAA,CAAA,UAAQ,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY,EAAG;IAAE,KAAK;AAAU;AAEjE,eAAe;IACd,MAAM,OAAO,MAAM,GAAG,CAAC;;;;;EAKtB,CAAC;IAEF,OAAO;AACR;AAEO,eAAe;IACpB,OAAO,SAAS,IAAI,CAAC;QACnB,SACE;IACJ;AACA,QAAQ;AACR,+CAA+C;AAC/C,oBAAoB;AACpB,qDAAqD;AACrD,IAAI;AACN","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}